### Variables
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
set $menu wmenu-run
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Output
set $op_lm DP-1
set $op_rm DP-3
set $op_tv HDMI-A-1


### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
output $op_lm resolution 1920x1200 position 0,0
output $op_rm resolution 1920x1200 position 1920,0
output $op_tv resolution 1920x1080 position 3840,0
output $op_tv disable


### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "type:keyboard" {
   xkb_layout no
}
input "type:pointer" {
   accel_profile "flat"
   pointer_accel 0.7
}


### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
   timeout 600 'swaymsg "output * power off"' \
   resume 'swaymsg "output * power on"' \
   before-sleep 'swaylock -f -c 000000'

# Lock the screen
bindsym $mod+Escape exec 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


### Misc
mouse_warping none
focus_follows_mouse no
popup_during_fullscreen smart


### Basics
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Control+c kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+F5 reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Control+F4 exec swaynag -t warning -m 'Do you really want to exit sway?' -B 'Yes, exit sway' 'swaymsg exit'


### Moving around
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right


# Layout stuff
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+v splitv
    # bindsym $mod+b splith
    bindsym $mod+b splith

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    # bindsym $mod+e layout toggle split
    bindsym $mod+a layout tabbed
    bindsym $mod+x layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent


### Scratchpad
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show


### Workspaces
    # We use variables to avoid repeating the names in multiple places.
    set $ws_1 1
    set $ws_2 2
    set $ws_3 3
    set $ws_4 4
    set $ws_5 5
    set $ws_q Q
    set $ws_w W
    set $ws_e E
    set $ws_r R
    
    workspace $ws_1 output $op_lm
    workspace $ws_2 output $op_lm
    workspace $ws_3 output $op_rm
    workspace $ws_4 output $op_rm
    # workspace $ws_5 output $op_tv
    workspace $ws_q output $op_lm
    workspace $ws_w output $op_lm
    workspace $ws_e output $op_rm
    workspace $ws_r output $op_rm
 
    # switch to workspace
    bindsym $mod+1 workspace $ws_1
    bindsym $mod+2 workspace $ws_2
    bindsym $mod+3 workspace $ws_3
    bindsym $mod+4 workspace $ws_4
    bindsym $mod+5 workspace $ws_5
    bindsym $mod+q workspace $ws_q
    bindsym $mod+w workspace $ws_w
    bindsym $mod+e workspace $ws_e
    bindsym $mod+r workspace $ws_r
    
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws_1
    bindsym $mod+Shift+2 move container to workspace $ws_2
    bindsym $mod+Shift+3 move container to workspace $ws_3
    bindsym $mod+Shift+4 move container to workspace $ws_4
    bindsym $mod+Shift+5 move container to workspace $ws_5
    bindsym $mod+Shift+q move container to workspace $ws_q
    bindsym $mod+Shift+w move container to workspace $ws_w
    bindsym $mod+Shift+e move container to workspace $ws_e
    bindsym $mod+Shift+r move container to workspace $ws_r
 
    # move focused containter to workspace and move to workspace
    bindsym $mod+Control+1 move container to workspace number $ws_1; workspace number $ws_1
    bindsym $mod+Control+2 move container to workspace number $ws_2; workspace number $ws_2
    bindsym $mod+Control+3 move container to workspace number $ws_3; workspace number $ws_3
    bindsym $mod+Control+4 move container to workspace number $ws_4; workspace number $ws_4
    bindsym $mod+Control+5 move container to workspace number $ws_5; workspace number $ws_5
    bindsym $mod+Control+q move container to workspace number $ws_q; workspace number $ws_q
    bindsym $mod+Control+w move container to workspace number $ws_w; workspace number $ws_w
    bindsym $mod+Control+e move container to workspace number $ws_e; workspace number $ws_e
    bindsym $mod+Control+r move container to workspace number $ws_r; workspace number $ws_r
 
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
 
    # Move workspaces
    # TODO: check keybind names: install wev
    bindsym $mod+greater move workspace to output right
    bindsym $mod+less move workspace to output left
 
    # Switch to TV
    bindsym $mod+Control+period \
         output $op_tv enable; \
         output $op_lm disable; \
         output $op_rm disable

    # Reset workspaces
    bindsym $mod+Control+comma \
         output $op_rm enable; \
         output $op_lm enable; \
         output $op_tv disable; \

### Resizing containers
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# bindsym $mod+r mode "resize"
bindsym $mod+z mode "resize"

### Utilities
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@DEFAULT_SINK@ togglj
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym Print exec grim


### Colors
# special
set $foreground   #c5c8c6
set $background   #151515
set $cursorColor  #ffffff
# black
set $color0       #262626
set $color8       #333333
# red
set $color1       #a54242
set $color9       #cc6666
# green
set $color2       #8c9440
set $color10      #b5bd68
# yellow
set $color3       #de935f
set $color11      #f0c674
# blue
set $color4       #5f819d
set $color12      #81a2be
# magenta
set $color5       #85678f
set $color13      #b294bb
# cyan
set $color6       #5e8d87
set $color14      #8abeb7
# hwite
set $color7       #707880
set $color15      #c5c8c6

### Font
font xft:Noto Sans 10
title_align center

### Gaps
gaps inner 10
gaps outer 0

### Border style
default_border pixel 1
default_floating_border pixel 1
# hide_edge_borders none

# Client                border      backgr.     text         indic.      child_brd.
client.focused          $color8     $color0     $cursorColor $color8     $color8
client.unfocused        $color0     $background $foreground  $color0     $color0
client.focused_inactive $color0     $color0     $foreground  $color0     $color0
client.urgent           $color8     $background $foreground  $color9     $color9
client.placeholder      $color14    $background $foreground  $color14    $color6
# client.background       $background
output $op_rm background $color9 solid_color

### Bar
bar {
    position bottom
    # status_command while date +'%d/%m/%Y %H:%M:%S'; do sleep 1; done
    status_command while ~/.config/sway/status_bar.sh; do sleep 1; done
    colors {
        background $background
        statusline $foreground
	#focused_background $background
	#focused_statusline $foreground
	separator  #f0f0f0
	#                  border      backgr.     text
	focused_workspace  $color8     $color8     $cursorColor
        active_workspace   $color8     $color8     $color15
        inactive_workspace $color8     $background $color15
	urgent_workspace   $color8     $background $color15
	binding_mode       $color8     $background $color15
    }
}
